from aiogram import Router, Bot, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from bot.filters.admin import AdminFilter
from bot.keyboards.admin import yes_no_keyboard
from bot.misc.states import MailingState
from bot.services import broadcaster
from infrastructure.database.repo.requests import RequestsRepo

admin_router = Router()
admin_router.message.filter(AdminFilter())


@admin_router.message(Command("admin"))
async def admin_start(message: Message):
    await message.reply("–í—ñ—Ç–∞—é, –∞–¥–º—ñ–Ω–µ!")


@admin_router.message(Command("mailing"))
async def mailing(message: Message, state: FSMContext):
    await message.answer("–£–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏")
    await state.set_state(MailingState.text)


@admin_router.message(MailingState.text)
async def text_for_mailing(message: Message, state: FSMContext):
    await message.answer(text=message.html_text)
    await message.answer(
        text="üëÜ–Ø —Ä–æ–∑—ñ—à–ª—é —É—Å—ñ–º —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è", reply_markup=yes_no_keyboard()
    )
    await state.set_data({"text": message.html_text})
    await state.set_state(MailingState.confirmation)


@admin_router.callback_query(MailingState.confirmation, F.data.in_(["yes", "no"]))
async def yes_no_mailing(
    callback: CallbackQuery, state: FSMContext, repo: RequestsRepo, bot: Bot
):
    if callback.data == "yes":
        data = await state.get_data()
        await callback.message.edit_text("–†–æ–∑—Å–∏–ª–∫—É —Ä–æ–∑–ø–æ—á–∞—Ç–æ!")
        count = await broadcaster.broadcast(
            bot=bot,
            users=await repo.users.all_users_ids(),
            text=data["text"],
            repo=repo,
        )
        await callback.message.answer(text=f"–£—Å–ø—ñ—à–Ω–æ —Ä–æ–∑—ñ—Å–ª–∞–Ω–æ: {count} —é–∑–µ—Ä–∞–º")
    else:
        await callback.message.edit_text("–ù—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–∑—Å–∏–ª–∞—é")
        await state.clear()
    await callback.answer()
